[0.000000] (-) TimerEvent: {}
[0.000191] (-) JobUnselected: {'identifier': 'odrive_can_interface'}
[0.000340] (-) JobUnselected: {'identifier': 'rehab_arm_robot'}
[0.000354] (-) JobUnselected: {'identifier': 'rehab_arm_robot_moveit_config'}
[0.000444] (rehab_arm_robot_control) JobQueued: {'identifier': 'rehab_arm_robot_control', 'dependencies': OrderedDict([('odrive_can_interface', '/home/nocc/Desktop/3dof_rehab_arm/install/odrive_can_interface')])}
[0.000542] (rehab_arm_robot_control) JobStarted: {'identifier': 'rehab_arm_robot_control'}
[0.006847] (rehab_arm_robot_control) JobProgress: {'identifier': 'rehab_arm_robot_control', 'progress': 'cmake'}
[0.013999] (rehab_arm_robot_control) JobProgress: {'identifier': 'rehab_arm_robot_control', 'progress': 'build'}
[0.014563] (rehab_arm_robot_control) Command: {'cmd': ['/usr/bin/cmake', '--build', '/home/nocc/Desktop/3dof_rehab_arm/build/rehab_arm_robot_control', '--', '-j8', '-l8'], 'cwd': '/home/nocc/Desktop/3dof_rehab_arm/build/rehab_arm_robot_control', 'env': OrderedDict([('LINOROBOT2_BASE', 'mecanum'), ('LESSOPEN', '| /usr/bin/lesspipe %s'), ('USER', 'nocc'), ('LC_TIME', 'vi_VN'), ('LINOROBOT2_LIDAR', 'a1'), ('XDG_SESSION_TYPE', 'wayland'), ('SHLVL', '1'), ('LD_LIBRARY_PATH', '/home/nocc/Desktop/3dof_rehab_arm/install/odrive_can_interface/lib:/usr/lib/x86_64-linux-gnu/gazebo-11/plugins:/opt/ros/humble/opt/rviz_ogre_vendor/lib:/opt/ros/humble/lib/x86_64-linux-gnu:/opt/ros/humble/lib:/usr/lib/x86_64-linux-gnu/gazebo-11/plugins'), ('HOME', '/home/nocc'), ('OLDPWD', '/home/nocc'), ('DESKTOP_SESSION', 'ubuntu'), ('GAZEBO_MASTER_URI', 'http://localhost:11345'), ('ROS_PYTHON_VERSION', '3'), ('GNOME_SHELL_SESSION_MODE', 'ubuntu'), ('GTK_MODULES', 'gail:atk-bridge'), ('LC_MONETARY', 'vi_VN'), ('SYSTEMD_EXEC_PID', '1718'), ('DBUS_SESSION_BUS_ADDRESS', 'unix:path=/run/user/1000/bus'), ('COLORTERM', 'truecolor'), ('IM_CONFIG_PHASE', '1'), ('WAYLAND_DISPLAY', 'wayland-0'), ('ROS_DISTRO', 'humble'), ('LOGNAME', 'nocc'), ('_', '/usr/bin/colcon'), ('ROS_VERSION', '2'), ('XDG_SESSION_CLASS', 'user'), ('USERNAME', 'nocc'), ('TERM', 'xterm-256color'), ('GAZEBO_MODEL_PATH', '/usr/share/gazebo-11/models:'), ('GNOME_DESKTOP_SESSION_ID', 'this-is-deprecated'), ('ROS_LOCALHOST_ONLY', '0'), ('OGRE_RESOURCE_PATH', '/usr/lib/x86_64-linux-gnu/OGRE-1.9.0'), ('PATH', '/opt/ros/humble/bin:/home/nocc/.local/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/snap/bin:/snap/bin'), ('SESSION_MANAGER', 'local/nocc-Aspire-A315-58:@/tmp/.ICE-unix/1683,unix/nocc-Aspire-A315-58:/tmp/.ICE-unix/1683'), ('XDG_MENU_PREFIX', 'gnome-'), ('LC_ADDRESS', 'vi_VN'), ('GNOME_TERMINAL_SCREEN', '/org/gnome/Terminal/screen/83bfc82e_97c1_4aca_91f8_d7006a49d649'), ('GNOME_SETUP_DISPLAY', ':1'), ('XDG_RUNTIME_DIR', '/run/user/1000'), ('DISPLAY', ':0'), ('LANG', 'en_US.UTF-8'), ('XDG_CURRENT_DESKTOP', 'ubuntu:GNOME'), ('LC_TELEPHONE', 'vi_VN'), ('RMW_IMPLEMENTATION', 'rmw_cyclonedds_cpp'), ('XMODIFIERS', '@im=ibus'), ('XDG_SESSION_DESKTOP', 'ubuntu'), ('XAUTHORITY', '/run/user/1000/.mutter-Xwaylandauth.1GSP82'), ('LS_COLORS', 'rs=0:di=01;34:ln=01;36:mh=00:pi=40;33:so=01;35:do=01;35:bd=40;33;01:cd=40;33;01:or=40;31;01:mi=00:su=37;41:sg=30;43:ca=30;41:tw=30;42:ow=34;42:st=37;44:ex=01;32:*.tar=01;31:*.tgz=01;31:*.arc=01;31:*.arj=01;31:*.taz=01;31:*.lha=01;31:*.lz4=01;31:*.lzh=01;31:*.lzma=01;31:*.tlz=01;31:*.txz=01;31:*.tzo=01;31:*.t7z=01;31:*.zip=01;31:*.z=01;31:*.dz=01;31:*.gz=01;31:*.lrz=01;31:*.lz=01;31:*.lzo=01;31:*.xz=01;31:*.zst=01;31:*.tzst=01;31:*.bz2=01;31:*.bz=01;31:*.tbz=01;31:*.tbz2=01;31:*.tz=01;31:*.deb=01;31:*.rpm=01;31:*.jar=01;31:*.war=01;31:*.ear=01;31:*.sar=01;31:*.rar=01;31:*.alz=01;31:*.ace=01;31:*.zoo=01;31:*.cpio=01;31:*.7z=01;31:*.rz=01;31:*.cab=01;31:*.wim=01;31:*.swm=01;31:*.dwm=01;31:*.esd=01;31:*.jpg=01;35:*.jpeg=01;35:*.mjpg=01;35:*.mjpeg=01;35:*.gif=01;35:*.bmp=01;35:*.pbm=01;35:*.pgm=01;35:*.ppm=01;35:*.tga=01;35:*.xbm=01;35:*.xpm=01;35:*.tif=01;35:*.tiff=01;35:*.png=01;35:*.svg=01;35:*.svgz=01;35:*.mng=01;35:*.pcx=01;35:*.mov=01;35:*.mpg=01;35:*.mpeg=01;35:*.m2v=01;35:*.mkv=01;35:*.webm=01;35:*.webp=01;35:*.ogm=01;35:*.mp4=01;35:*.m4v=01;35:*.mp4v=01;35:*.vob=01;35:*.qt=01;35:*.nuv=01;35:*.wmv=01;35:*.asf=01;35:*.rm=01;35:*.rmvb=01;35:*.flc=01;35:*.avi=01;35:*.fli=01;35:*.flv=01;35:*.gl=01;35:*.dl=01;35:*.xcf=01;35:*.xwd=01;35:*.yuv=01;35:*.cgm=01;35:*.emf=01;35:*.ogv=01;35:*.ogx=01;35:*.aac=00;36:*.au=00;36:*.flac=00;36:*.m4a=00;36:*.mid=00;36:*.midi=00;36:*.mka=00;36:*.mp3=00;36:*.mpc=00;36:*.ogg=00;36:*.ra=00;36:*.wav=00;36:*.oga=00;36:*.opus=00;36:*.spx=00;36:*.xspf=00;36:'), ('GNOME_TERMINAL_SERVICE', ':1.105'), ('SSH_AGENT_LAUNCHER', 'gnome-keyring'), ('SSH_AUTH_SOCK', '/run/user/1000/keyring/ssh'), ('AMENT_PREFIX_PATH', '/home/nocc/Desktop/3dof_rehab_arm/install/odrive_can_interface:/opt/ros/humble'), ('SHELL', '/bin/bash'), ('LC_NAME', 'vi_VN'), ('QT_ACCESSIBILITY', '1'), ('GDMSESSION', 'ubuntu'), ('LESSCLOSE', '/usr/bin/lesspipe %s %s'), ('LC_MEASUREMENT', 'vi_VN'), ('GAZEBO_RESOURCE_PATH', '/usr/share/gazebo-11:'), ('LC_IDENTIFICATION', 'vi_VN'), ('GAZEBO_MODEL_DATABASE_URI', 'http://models.gazebosim.org'), ('QT_IM_MODULE', 'ibus'), ('PWD', '/home/nocc/Desktop/3dof_rehab_arm/build/rehab_arm_robot_control'), ('LC_ALL', 'en_US.UTF-8'), ('XDG_CONFIG_DIRS', '/etc/xdg/xdg-ubuntu:/etc/xdg'), ('GAZEBO_PLUGIN_PATH', '/usr/lib/x86_64-linux-gnu/gazebo-11/plugins:'), ('XDG_DATA_DIRS', '/usr/share/ubuntu:/usr/local/share/:/usr/share/:/var/lib/snapd/desktop'), ('PYTHONPATH', '/opt/ros/humble/lib/python3.10/site-packages:/opt/ros/humble/local/lib/python3.10/dist-packages'), ('LC_NUMERIC', 'vi_VN'), ('LC_PAPER', 'vi_VN'), ('COLCON', '1'), ('VTE_VERSION', '6800'), ('CMAKE_PREFIX_PATH', '/home/nocc/Desktop/3dof_rehab_arm/install/odrive_can_interface:/opt/ros/humble')]), 'shell': False}
[0.035363] (rehab_arm_robot_control) StdoutLine: {'line': b'-- Found ament_cmake: 1.3.11 (/opt/ros/humble/share/ament_cmake/cmake)\n'}
[0.099966] (-) TimerEvent: {}
[0.124621] (rehab_arm_robot_control) StdoutLine: {'line': b'-- Found rclcpp: 16.0.12 (/opt/ros/humble/share/rclcpp/cmake)\n'}
[0.144154] (rehab_arm_robot_control) StdoutLine: {'line': b'-- Found rosidl_generator_c: 3.1.6 (/opt/ros/humble/share/rosidl_generator_c/cmake)\n'}
[0.145890] (rehab_arm_robot_control) StdoutLine: {'line': b'-- Found rosidl_adapter: 3.1.6 (/opt/ros/humble/share/rosidl_adapter/cmake)\n'}
[0.149931] (rehab_arm_robot_control) StdoutLine: {'line': b'-- Found rosidl_generator_cpp: 3.1.6 (/opt/ros/humble/share/rosidl_generator_cpp/cmake)\n'}
[0.156392] (rehab_arm_robot_control) StdoutLine: {'line': b'-- Using all available rosidl_typesupport_c: rosidl_typesupport_fastrtps_c;rosidl_typesupport_introspection_c\n'}
[0.164447] (rehab_arm_robot_control) StdoutLine: {'line': b'-- Using all available rosidl_typesupport_cpp: rosidl_typesupport_fastrtps_cpp;rosidl_typesupport_introspection_cpp\n'}
[0.185151] (rehab_arm_robot_control) StdoutLine: {'line': b'-- Found rmw_implementation_cmake: 6.1.2 (/opt/ros/humble/share/rmw_implementation_cmake/cmake)\n'}
[0.186055] (rehab_arm_robot_control) StdoutLine: {'line': b'-- Found rmw_cyclonedds_cpp: 1.3.4 (/opt/ros/humble/share/rmw_cyclonedds_cpp/cmake)\n'}
[0.197358] (rehab_arm_robot_control) StdoutLine: {'line': b"-- Using RMW implementation 'rmw_cyclonedds_cpp' as default\n"}
[0.200058] (-) TimerEvent: {}
[0.229407] (rehab_arm_robot_control) StdoutLine: {'line': b'-- Found sensor_msgs: 4.9.0 (/opt/ros/humble/share/sensor_msgs/cmake)\n'}
[0.248671] (rehab_arm_robot_control) StdoutLine: {'line': b'-- Found trajectory_msgs: 4.9.0 (/opt/ros/humble/share/trajectory_msgs/cmake)\n'}
[0.259465] (rehab_arm_robot_control) StdoutLine: {'line': b'-- Found visualization_msgs: 4.9.0 (/opt/ros/humble/share/visualization_msgs/cmake)\n'}
[0.272173] (rehab_arm_robot_control) StdoutLine: {'line': b'-- Found moveit_ros_planning_interface: 2.5.9 (/opt/ros/humble/share/moveit_ros_planning_interface/cmake)\n'}
[0.279252] (rehab_arm_robot_control) StdoutLine: {'line': b'-- Found Boost: /usr/lib/x86_64-linux-gnu/cmake/Boost-1.74.0/BoostConfig.cmake (found version "1.74.0") found components: date_time filesystem program_options system thread \n'}
[0.300287] (-) TimerEvent: {}
[0.357055] (rehab_arm_robot_control) StdoutLine: {'line': b'-- Found Boost: /usr/lib/x86_64-linux-gnu/cmake/Boost-1.74.0/BoostConfig.cmake (found version "1.74.0") found components: chrono date_time filesystem iostreams program_options regex serialization system thread \n'}
[0.373145] (rehab_arm_robot_control) StdoutLine: {'line': b'-- Found parameter_traits: 0.5.0 (/opt/ros/humble/share/parameter_traits/cmake)\n'}
[0.377493] (rehab_arm_robot_control) StdoutLine: {'line': b'-- Found rclcpp_lifecycle: 16.0.12 (/opt/ros/humble/share/rclcpp_lifecycle/cmake)\n'}
[0.392961] (rehab_arm_robot_control) StdoutLine: {'line': b'-- Found Boost: /usr/lib/x86_64-linux-gnu/cmake/Boost-1.74.0/BoostConfig.cmake (found version "1.74.0") found components: filesystem \n'}
[0.400394] (-) TimerEvent: {}
[0.414172] (rehab_arm_robot_control) StdoutLine: {'line': b'-- library: /usr/lib/x86_64-linux-gnu/libcurl.so\n'}
[0.419208] (rehab_arm_robot_control) StdoutLine: {'line': b'-- Ensuring Eigen3 include directory is part of orocos-kdl CMake target\n'}
[0.496272] (rehab_arm_robot_control) StdoutLine: {'line': b'-- Found Boost: /usr/lib/x86_64-linux-gnu/cmake/Boost-1.74.0/BoostConfig.cmake (found version "1.74.0") found components: system filesystem date_time program_options thread chrono \n'}
[0.500487] (-) TimerEvent: {}
[0.516526] (rehab_arm_robot_control) StdoutLine: {'line': b'-- Found Boost: /usr/lib/x86_64-linux-gnu/cmake/Boost-1.74.0/BoostConfig.cmake (found version "1.74.0") found components: thread system filesystem regex date_time program_options \n'}
[0.535687] (rehab_arm_robot_control) StdoutLine: {'line': b'-- Found Boost: /usr/lib/x86_64-linux-gnu/cmake/Boost-1.74.0/BoostConfig.cmake (found version "1.74.0") found components: system filesystem date_time program_options thread \n'}
[0.555133] (rehab_arm_robot_control) StdoutLine: {'line': b'-- Found odrive_can_interface: 0.0.1 (/home/nocc/Desktop/3dof_rehab_arm/install/odrive_can_interface/share/odrive_can_interface/cmake)\n'}
[0.556211] (rehab_arm_robot_control) StdoutLine: {'line': b'-- Found graph_msgs: 0.2.0 (/opt/ros/humble/share/graph_msgs/cmake)\n'}
[0.580515] (rehab_arm_robot_control) StdoutLine: {'line': b'-- Found moveit_visual_tools: 4.1.2 (/opt/ros/humble/share/moveit_visual_tools/cmake)\n'}
[0.600598] (-) TimerEvent: {}
[0.618601] (rehab_arm_robot_control) StdoutLine: {'line': b"-- Setting assimp_DIR to: '/opt/ros/humble/share/rviz_assimp_vendor/cmake/../../../opt/rviz_assimp_vendor/lib/cmake/assimp-4.1'\n"}
[0.624613] (rehab_arm_robot_control) StdoutLine: {'line': b"-- Setting OGRE_DIR to: '/opt/ros/humble/share/rviz_ogre_vendor/cmake/../../../opt/rviz_ogre_vendor/lib/OGRE/cmake'\n"}
[0.626318] (rehab_arm_robot_control) StdoutLine: {'line': b'-- Found OGRE\n'}
[0.626389] (rehab_arm_robot_control) StdoutLine: {'line': b'--   static     : OFF\n'}
[0.626442] (rehab_arm_robot_control) StdoutLine: {'line': b'--   components : HLMS;MeshLodGenerator;Overlay;Paging;Property;RTShaderSystem;Terrain;Volume\n'}
[0.626525] (rehab_arm_robot_control) StdoutLine: {'line': b'--   plugins    : Plugin_BSPSceneManager;Plugin_OctreeSceneManager;Plugin_PCZSceneManager;Plugin_ParticleFX;RenderSystem_GL;RenderSystem_GL3Plus;Codec_STBI\n'}
[0.626595] (rehab_arm_robot_control) StdoutLine: {'line': b'--   media      : /opt/ros/humble/opt/rviz_ogre_vendor/share/OGRE/Media\n'}
[0.626645] (rehab_arm_robot_control) StdoutLine: {'line': b'-- OGRE_LIBRARIES: OgreHLMS;OgreMeshLodGenerator;OgreOverlay;OgrePaging;OgreProperty;OgreRTShaderSystem;OgreTerrain;OgreVolume;OgreMain\n'}
[0.626687] (rehab_arm_robot_control) StdoutLine: {'line': b'-- OGRE_LIBRARY_DIRS: /opt/ros/humble/opt/rviz_ogre_vendor/lib\n'}
[0.626729] (rehab_arm_robot_control) StdoutLine: {'line': b'-- OGRE_PLUGINS: Plugin_BSPSceneManager;Plugin_OctreeSceneManager;Plugin_PCZSceneManager;Plugin_ParticleFX;RenderSystem_GL;RenderSystem_GL3Plus;Codec_STBI\n'}
[0.626770] (rehab_arm_robot_control) StdoutLine: {'line': b'-- OGRE_PLUGIN_DIR: /opt/ros/humble/opt/rviz_ogre_vendor/lib/OGRE\n'}
[0.626814] (rehab_arm_robot_control) StdoutLine: {'line': b'-- rviz_ogre_vendor::OgreOverlay for IMPORTED_LOCATION_RELEASE: /opt/ros/humble/opt/rviz_ogre_vendor/lib/libOgreOverlay.so\n'}
[0.626855] (rehab_arm_robot_control) StdoutLine: {'line': b'-- rviz_ogre_vendor::OgreOverlay for IMPORTED_LOCATION_DEBUG: /opt/ros/humble/opt/rviz_ogre_vendor/lib/libOgreOverlay.so\n'}
[0.626912] (rehab_arm_robot_control) StdoutLine: {'line': b'-- rviz_ogre_vendor::OgreMain for IMPORTED_LOCATION_RELEASE: /opt/ros/humble/opt/rviz_ogre_vendor/lib/libOgreMain.so\n'}
[0.626975] (rehab_arm_robot_control) StdoutLine: {'line': b'-- rviz_ogre_vendor::OgreMain for IMPORTED_LOCATION_DEBUG: /opt/ros/humble/opt/rviz_ogre_vendor/lib/libOgreMain.so\n'}
[0.640704] (rehab_arm_robot_control) StdoutLine: {'line': b'-- Found ZLIB: /usr/lib/x86_64-linux-gnu/libz.so (found version "1.2.11") \n'}
[0.644262] (rehab_arm_robot_control) StdoutLine: {'line': b'-- Found OpenGL: /usr/lib/x86_64-linux-gnu/libOpenGL.so   \n'}
[0.700697] (-) TimerEvent: {}
[0.706670] (rehab_arm_robot_control) StdoutLine: {'line': b'-- Found X11: /usr/include   \n'}
[0.707284] (rehab_arm_robot_control) StdoutLine: {'line': b'-- Looking for XOpenDisplay in /usr/lib/x86_64-linux-gnu/libX11.so;/usr/lib/x86_64-linux-gnu/libXext.so\n'}
[0.760837] (rehab_arm_robot_control) StdoutLine: {'line': b'-- Looking for XOpenDisplay in /usr/lib/x86_64-linux-gnu/libX11.so;/usr/lib/x86_64-linux-gnu/libXext.so - found\n'}
[0.761063] (rehab_arm_robot_control) StdoutLine: {'line': b'-- Looking for gethostbyname\n'}
[0.800788] (-) TimerEvent: {}
[0.812584] (rehab_arm_robot_control) StdoutLine: {'line': b'-- Looking for gethostbyname - found\n'}
[0.812778] (rehab_arm_robot_control) StdoutLine: {'line': b'-- Looking for connect\n'}
[0.860929] (rehab_arm_robot_control) StdoutLine: {'line': b'-- Looking for connect - found\n'}
[0.861132] (rehab_arm_robot_control) StdoutLine: {'line': b'-- Looking for remove\n'}
[0.900904] (-) TimerEvent: {}
[0.914004] (rehab_arm_robot_control) StdoutLine: {'line': b'-- Looking for remove - found\n'}
[0.914157] (rehab_arm_robot_control) StdoutLine: {'line': b'-- Looking for shmat\n'}
[0.965109] (rehab_arm_robot_control) StdoutLine: {'line': b'-- Looking for shmat - found\n'}
[0.965302] (rehab_arm_robot_control) StdoutLine: {'line': b'-- Looking for IceConnectionNumber in ICE\n'}
[1.000996] (-) TimerEvent: {}
[1.015228] (rehab_arm_robot_control) StdoutLine: {'line': b'-- Looking for IceConnectionNumber in ICE - found\n'}
[1.101180] (-) TimerEvent: {}
[1.102042] (rehab_arm_robot_control) StdoutLine: {'line': b'-- Found ament_lint_auto: 0.12.12 (/opt/ros/humble/share/ament_lint_auto/cmake)\n'}
[1.150900] (rehab_arm_robot_control) StdoutLine: {'line': b"-- Added test 'cppcheck' to perform static code analysis on C / C++ code\n"}
[1.151201] (rehab_arm_robot_control) StdoutLine: {'line': b'-- Configured cppcheck include dirs: $<BUILD_INTERFACE:/home/nocc/Desktop/3dof_rehab_arm/src/rehab_arm_robot_control/include>\n'}
[1.151297] (rehab_arm_robot_control) StdoutLine: {'line': b'-- Configured cppcheck exclude dirs and/or files: \n'}
[1.151621] (rehab_arm_robot_control) StdoutLine: {'line': b"-- Added test 'flake8' to check Python code syntax and style conventions\n"}
[1.152060] (rehab_arm_robot_control) StdoutLine: {'line': b"-- Added test 'lint_cmake' to check CMake code style\n"}
[1.152383] (rehab_arm_robot_control) StdoutLine: {'line': b"-- Added test 'pep257' to check Python code against some of the docstring style conventions in PEP 257\n"}
[1.153208] (rehab_arm_robot_control) StdoutLine: {'line': b"-- Added test 'uncrustify' to check C / C++ code style\n"}
[1.153437] (rehab_arm_robot_control) StdoutLine: {'line': b'-- Configured uncrustify additional arguments: \n'}
[1.153633] (rehab_arm_robot_control) StdoutLine: {'line': b"-- Added test 'xmllint' to check XML markup files\n"}
[1.154507] (rehab_arm_robot_control) StdoutLine: {'line': b'-- Configuring done\n'}
[1.201294] (-) TimerEvent: {}
[1.210122] (rehab_arm_robot_control) StdoutLine: {'line': b'-- Generating done\n'}
[1.233852] (rehab_arm_robot_control) StdoutLine: {'line': b'-- Build files have been written to: /home/nocc/Desktop/3dof_rehab_arm/build/rehab_arm_robot_control\n'}
[1.261301] (rehab_arm_robot_control) StdoutLine: {'line': b'\x1b[35m\x1b[1mConsolidate compiler generated dependencies of target rrt_motion_planning\x1b[0m\n'}
[1.261576] (rehab_arm_robot_control) StdoutLine: {'line': b'\x1b[35m\x1b[1mConsolidate compiler generated dependencies of target arm_odrive_bridge\x1b[0m\n'}
[1.264340] (rehab_arm_robot_control) StdoutLine: {'line': b'\x1b[35m\x1b[1mConsolidate compiler generated dependencies of target planning\x1b[0m\n'}
[1.265644] (rehab_arm_robot_control) StdoutLine: {'line': b'\x1b[35m\x1b[1mConsolidate compiler generated dependencies of target state_reader\x1b[0m\n'}
[1.283855] (rehab_arm_robot_control) StdoutLine: {'line': b'[ 25%] Built target arm_odrive_bridge\n'}
[1.291285] (rehab_arm_robot_control) StdoutLine: {'line': b'[ 50%] Built target rrt_motion_planning\n'}
[1.292735] (rehab_arm_robot_control) StdoutLine: {'line': b'[ 62%] \x1b[32mBuilding CXX object CMakeFiles/planning.dir/src/planning.cpp.o\x1b[0m\n'}
[1.301418] (-) TimerEvent: {}
[1.302592] (rehab_arm_robot_control) StdoutLine: {'line': b'[ 87%] Built target state_reader\n'}
[1.401596] (-) TimerEvent: {}
[1.501956] (-) TimerEvent: {}
[1.602220] (-) TimerEvent: {}
[1.702454] (-) TimerEvent: {}
[1.802680] (-) TimerEvent: {}
[1.902941] (-) TimerEvent: {}
[2.003202] (-) TimerEvent: {}
[2.103575] (-) TimerEvent: {}
[2.203829] (-) TimerEvent: {}
[2.304095] (-) TimerEvent: {}
[2.404436] (-) TimerEvent: {}
[2.504686] (-) TimerEvent: {}
[2.604936] (-) TimerEvent: {}
[2.705336] (-) TimerEvent: {}
[2.805698] (-) TimerEvent: {}
[2.905985] (-) TimerEvent: {}
[3.006279] (-) TimerEvent: {}
[3.106585] (-) TimerEvent: {}
[3.206859] (-) TimerEvent: {}
[3.307107] (-) TimerEvent: {}
[3.407487] (-) TimerEvent: {}
[3.507799] (-) TimerEvent: {}
[3.608133] (-) TimerEvent: {}
[3.708410] (-) TimerEvent: {}
[3.808763] (-) TimerEvent: {}
[3.909047] (-) TimerEvent: {}
[4.009376] (-) TimerEvent: {}
[4.109664] (-) TimerEvent: {}
[4.210034] (-) TimerEvent: {}
[4.310308] (-) TimerEvent: {}
[4.410566] (-) TimerEvent: {}
[4.510840] (-) TimerEvent: {}
[4.611109] (-) TimerEvent: {}
[4.711370] (-) TimerEvent: {}
[4.811609] (-) TimerEvent: {}
[4.911887] (-) TimerEvent: {}
[5.012369] (-) TimerEvent: {}
[5.112727] (-) TimerEvent: {}
[5.213067] (-) TimerEvent: {}
[5.313385] (-) TimerEvent: {}
[5.413668] (-) TimerEvent: {}
[5.513945] (-) TimerEvent: {}
[5.614221] (-) TimerEvent: {}
[5.714512] (-) TimerEvent: {}
[5.814846] (-) TimerEvent: {}
[5.915115] (-) TimerEvent: {}
[5.993164] (rehab_arm_robot_control) StderrLine: {'line': b'\x1b[01m\x1b[K/home/nocc/Desktop/3dof_rehab_arm/src/rehab_arm_robot_control/src/planning.cpp:\x1b[m\x1b[K In lambda function:\n'}
[5.993322] (rehab_arm_robot_control) StderrLine: {'line': b'\x1b[01m\x1b[K/home/nocc/Desktop/3dof_rehab_arm/src/rehab_arm_robot_control/src/planning.cpp:175:49:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Kno matching function for call to \xe2\x80\x98\x1b[01m\x1b[Kmoveit_visual_tools::MoveItVisualTools::publishTrajectoryLine(const JointTrajectory&, const std::vector<std::__cxx11::basic_string<char> >&)\x1b[m\x1b[K\xe2\x80\x99\n'}
[5.993378] (rehab_arm_robot_control) StderrLine: {'line': b'  175 |             \x1b[01;31m\x1b[Kvisual_tools_->publishTrajectoryLine(trajectory, arm_joints)\x1b[m\x1b[K;\n'}
[5.993432] (rehab_arm_robot_control) StderrLine: {'line': b'      |             \x1b[01;31m\x1b[K~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~\x1b[m\x1b[K\n'}
[5.993486] (rehab_arm_robot_control) StderrLine: {'line': b'In file included from \x1b[01m\x1b[K/home/nocc/Desktop/3dof_rehab_arm/src/rehab_arm_robot_control/src/planning.cpp:128\x1b[m\x1b[K:\n'}
[5.993529] (rehab_arm_robot_control) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/moveit_visual_tools/moveit_visual_tools.h:591:8:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[Kcandidate: \xe2\x80\x98\x1b[01m\x1b[Kbool moveit_visual_tools::MoveItVisualTools::publishTrajectoryLine(const RobotTrajectory&, const moveit::core::LinkModel*, const moveit::core::JointModelGroup*, const rviz_visual_tools::Colors&)\x1b[m\x1b[K\xe2\x80\x99\n'}
[5.993576] (rehab_arm_robot_control) StderrLine: {'line': b'  591 |   bool \x1b[01;36m\x1b[KpublishTrajectoryLine\x1b[m\x1b[K(const moveit_msgs::msg::RobotTrajectory& trajectory_msg,\n'}
[5.993616] (rehab_arm_robot_control) StderrLine: {'line': b'      |        \x1b[01;36m\x1b[K^~~~~~~~~~~~~~~~~~~~~\x1b[m\x1b[K\n'}
[6.003720] (rehab_arm_robot_control) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/moveit_visual_tools/moveit_visual_tools.h:591:8:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[K  candidate expects 4 arguments, 2 provided\n'}
[6.003875] (rehab_arm_robot_control) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/moveit_visual_tools/moveit_visual_tools.h:595:8:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[Kcandidate: \xe2\x80\x98\x1b[01m\x1b[Kbool moveit_visual_tools::MoveItVisualTools::publishTrajectoryLine(const RobotTrajectoryPtr&, const moveit::core::LinkModel*, const rviz_visual_tools::Colors&)\x1b[m\x1b[K\xe2\x80\x99\n'}
[6.003956] (rehab_arm_robot_control) StderrLine: {'line': b'  595 |   bool \x1b[01;36m\x1b[KpublishTrajectoryLine\x1b[m\x1b[K(const robot_trajectory::RobotTrajectoryPtr& robot_trajectory,\n'}
[6.004038] (rehab_arm_robot_control) StderrLine: {'line': b'      |        \x1b[01;36m\x1b[K^~~~~~~~~~~~~~~~~~~~~\x1b[m\x1b[K\n'}
[6.004110] (rehab_arm_robot_control) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/moveit_visual_tools/moveit_visual_tools.h:595:74:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[K  no known conversion for argument 1 from \xe2\x80\x98\x1b[01m\x1b[Kconst JointTrajectory\x1b[m\x1b[K\xe2\x80\x99 {aka \xe2\x80\x98\x1b[01m\x1b[Kconst trajectory_msgs::msg::JointTrajectory_<std::allocator<void> >\x1b[m\x1b[K\xe2\x80\x99} to \xe2\x80\x98\x1b[01m\x1b[Kconst RobotTrajectoryPtr&\x1b[m\x1b[K\xe2\x80\x99 {aka \xe2\x80\x98\x1b[01m\x1b[Kconst std::shared_ptr<robot_trajectory::RobotTrajectory>&\x1b[m\x1b[K\xe2\x80\x99}\n'}
[6.004193] (rehab_arm_robot_control) StderrLine: {'line': b'  595 |   bool publishTrajectoryLine(\x1b[01;36m\x1b[Kconst robot_trajectory::RobotTrajectoryPtr& robot_trajectory\x1b[m\x1b[K,\n'}
[6.004266] (rehab_arm_robot_control) StderrLine: {'line': b'      |                              \x1b[01;36m\x1b[K~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~\x1b[m\x1b[K\n'}
[6.004337] (rehab_arm_robot_control) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/moveit_visual_tools/moveit_visual_tools.h:598:8:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[Kcandidate: \xe2\x80\x98\x1b[01m\x1b[Kbool moveit_visual_tools::MoveItVisualTools::publishTrajectoryLine(const robot_trajectory::RobotTrajectory&, const moveit::core::LinkModel*, const rviz_visual_tools::Colors&)\x1b[m\x1b[K\xe2\x80\x99\n'}
[6.004411] (rehab_arm_robot_control) StderrLine: {'line': b'  598 |   bool \x1b[01;36m\x1b[KpublishTrajectoryLine\x1b[m\x1b[K(const robot_trajectory::RobotTrajectory& robot_trajectory,\n'}
[6.004494] (rehab_arm_robot_control) StderrLine: {'line': b'      |        \x1b[01;36m\x1b[K^~~~~~~~~~~~~~~~~~~~~\x1b[m\x1b[K\n'}
[6.004570] (rehab_arm_robot_control) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/moveit_visual_tools/moveit_visual_tools.h:598:71:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[K  no known conversion for argument 1 from \xe2\x80\x98\x1b[01m\x1b[Kconst JointTrajectory\x1b[m\x1b[K\xe2\x80\x99 {aka \xe2\x80\x98\x1b[01m\x1b[Kconst trajectory_msgs::msg::JointTrajectory_<std::allocator<void> >\x1b[m\x1b[K\xe2\x80\x99} to \xe2\x80\x98\x1b[01m\x1b[Kconst robot_trajectory::RobotTrajectory&\x1b[m\x1b[K\xe2\x80\x99\n'}
[6.004650] (rehab_arm_robot_control) StderrLine: {'line': b'  598 |   bool publishTrajectoryLine(\x1b[01;36m\x1b[Kconst robot_trajectory::RobotTrajectory& robot_trajectory\x1b[m\x1b[K,\n'}
[6.004728] (rehab_arm_robot_control) StderrLine: {'line': b'      |                              \x1b[01;36m\x1b[K~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~\x1b[m\x1b[K\n'}
[6.004808] (rehab_arm_robot_control) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/moveit_visual_tools/moveit_visual_tools.h:610:8:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[Kcandidate: \xe2\x80\x98\x1b[01m\x1b[Kbool moveit_visual_tools::MoveItVisualTools::publishTrajectoryLine(const RobotTrajectory&, const moveit::core::JointModelGroup*, const rviz_visual_tools::Colors&)\x1b[m\x1b[K\xe2\x80\x99\n'}
[6.004886] (rehab_arm_robot_control) StderrLine: {'line': b'  610 |   bool \x1b[01;36m\x1b[KpublishTrajectoryLine\x1b[m\x1b[K(const moveit_msgs::msg::RobotTrajectory& trajectory_msg,\n'}
[6.004957] (rehab_arm_robot_control) StderrLine: {'line': b'      |        \x1b[01;36m\x1b[K^~~~~~~~~~~~~~~~~~~~~\x1b[m\x1b[K\n'}
[6.005028] (rehab_arm_robot_control) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/moveit_visual_tools/moveit_visual_tools.h:610:71:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[K  no known conversion for argument 1 from \xe2\x80\x98\x1b[01m\x1b[Kconst JointTrajectory\x1b[m\x1b[K\xe2\x80\x99 {aka \xe2\x80\x98\x1b[01m\x1b[Kconst trajectory_msgs::msg::JointTrajectory_<std::allocator<void> >\x1b[m\x1b[K\xe2\x80\x99} to \xe2\x80\x98\x1b[01m\x1b[Kconst RobotTrajectory&\x1b[m\x1b[K\xe2\x80\x99 {aka \xe2\x80\x98\x1b[01m\x1b[Kconst moveit_msgs::msg::RobotTrajectory_<std::allocator<void> >&\x1b[m\x1b[K\xe2\x80\x99}\n'}
[6.005115] (rehab_arm_robot_control) StderrLine: {'line': b'  610 |   bool publishTrajectoryLine(\x1b[01;36m\x1b[Kconst moveit_msgs::msg::RobotTrajectory& trajectory_msg\x1b[m\x1b[K,\n'}
[6.005187] (rehab_arm_robot_control) StderrLine: {'line': b'      |                              \x1b[01;36m\x1b[K~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~\x1b[m\x1b[K\n'}
[6.005259] (rehab_arm_robot_control) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/moveit_visual_tools/moveit_visual_tools.h:613:8:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[Kcandidate: \xe2\x80\x98\x1b[01m\x1b[Kbool moveit_visual_tools::MoveItVisualTools::publishTrajectoryLine(const RobotTrajectoryPtr&, const moveit::core::JointModelGroup*, const rviz_visual_tools::Colors&)\x1b[m\x1b[K\xe2\x80\x99\n'}
[6.005339] (rehab_arm_robot_control) StderrLine: {'line': b'  613 |   bool \x1b[01;36m\x1b[KpublishTrajectoryLine\x1b[m\x1b[K(const robot_trajectory::RobotTrajectoryPtr& robot_trajectory,\n'}
[6.005409] (rehab_arm_robot_control) StderrLine: {'line': b'      |        \x1b[01;36m\x1b[K^~~~~~~~~~~~~~~~~~~~~\x1b[m\x1b[K\n'}
[6.005489] (rehab_arm_robot_control) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/moveit_visual_tools/moveit_visual_tools.h:613:74:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[K  no known conversion for argument 1 from \xe2\x80\x98\x1b[01m\x1b[Kconst JointTrajectory\x1b[m\x1b[K\xe2\x80\x99 {aka \xe2\x80\x98\x1b[01m\x1b[Kconst trajectory_msgs::msg::JointTrajectory_<std::allocator<void> >\x1b[m\x1b[K\xe2\x80\x99} to \xe2\x80\x98\x1b[01m\x1b[Kconst RobotTrajectoryPtr&\x1b[m\x1b[K\xe2\x80\x99 {aka \xe2\x80\x98\x1b[01m\x1b[Kconst std::shared_ptr<robot_trajectory::RobotTrajectory>&\x1b[m\x1b[K\xe2\x80\x99}\n'}
[6.005565] (rehab_arm_robot_control) StderrLine: {'line': b'  613 |   bool publishTrajectoryLine(\x1b[01;36m\x1b[Kconst robot_trajectory::RobotTrajectoryPtr& robot_trajectory\x1b[m\x1b[K,\n'}
[6.005635] (rehab_arm_robot_control) StderrLine: {'line': b'      |                              \x1b[01;36m\x1b[K~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~\x1b[m\x1b[K\n'}
[6.005704] (rehab_arm_robot_control) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/moveit_visual_tools/moveit_visual_tools.h:616:8:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[Kcandidate: \xe2\x80\x98\x1b[01m\x1b[Kbool moveit_visual_tools::MoveItVisualTools::publishTrajectoryLine(const robot_trajectory::RobotTrajectory&, const moveit::core::JointModelGroup*, const rviz_visual_tools::Colors&)\x1b[m\x1b[K\xe2\x80\x99\n'}
[6.005779] (rehab_arm_robot_control) StderrLine: {'line': b'  616 |   bool \x1b[01;36m\x1b[KpublishTrajectoryLine\x1b[m\x1b[K(const robot_trajectory::RobotTrajectory& robot_trajectory,\n'}
[6.005852] (rehab_arm_robot_control) StderrLine: {'line': b'      |        \x1b[01;36m\x1b[K^~~~~~~~~~~~~~~~~~~~~\x1b[m\x1b[K\n'}
[6.005922] (rehab_arm_robot_control) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/moveit_visual_tools/moveit_visual_tools.h:616:71:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[K  no known conversion for argument 1 from \xe2\x80\x98\x1b[01m\x1b[Kconst JointTrajectory\x1b[m\x1b[K\xe2\x80\x99 {aka \xe2\x80\x98\x1b[01m\x1b[Kconst trajectory_msgs::msg::JointTrajectory_<std::allocator<void> >\x1b[m\x1b[K\xe2\x80\x99} to \xe2\x80\x98\x1b[01m\x1b[Kconst robot_trajectory::RobotTrajectory&\x1b[m\x1b[K\xe2\x80\x99\n'}
[6.005995] (rehab_arm_robot_control) StderrLine: {'line': b'  616 |   bool publishTrajectoryLine(\x1b[01;36m\x1b[Kconst robot_trajectory::RobotTrajectory& robot_trajectory\x1b[m\x1b[K,\n'}
[6.006064] (rehab_arm_robot_control) StderrLine: {'line': b'      |                              \x1b[01;36m\x1b[K~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~\x1b[m\x1b[K\n'}
[6.015238] (-) TimerEvent: {}
[6.115627] (-) TimerEvent: {}
[6.215939] (-) TimerEvent: {}
[6.316240] (-) TimerEvent: {}
[6.416523] (-) TimerEvent: {}
[6.516798] (-) TimerEvent: {}
[6.617148] (-) TimerEvent: {}
[6.717453] (-) TimerEvent: {}
[6.817724] (-) TimerEvent: {}
[6.918078] (-) TimerEvent: {}
[7.018458] (-) TimerEvent: {}
[7.118772] (-) TimerEvent: {}
[7.219104] (-) TimerEvent: {}
[7.319384] (-) TimerEvent: {}
[7.419651] (-) TimerEvent: {}
[7.519932] (-) TimerEvent: {}
[7.620202] (-) TimerEvent: {}
[7.720552] (-) TimerEvent: {}
[7.820805] (-) TimerEvent: {}
[7.862991] (rehab_arm_robot_control) StderrLine: {'line': b'In file included from \x1b[01m\x1b[K/usr/include/x86_64-linux-gnu/c++/11/bits/c++allocator.h:33\x1b[m\x1b[K,\n'}
[7.863224] (rehab_arm_robot_control) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/usr/include/c++/11/bits/allocator.h:46\x1b[m\x1b[K,\n'}
[7.863301] (rehab_arm_robot_control) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/usr/include/c++/11/unordered_map:40\x1b[m\x1b[K,\n'}
[7.863367] (rehab_arm_robot_control) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/usr/include/c++/11/functional:61\x1b[m\x1b[K,\n'}
[7.863433] (rehab_arm_robot_control) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/home/nocc/Desktop/3dof_rehab_arm/src/rehab_arm_robot_control/src/planning.cpp:122\x1b[m\x1b[K:\n'}
[7.863510] (rehab_arm_robot_control) StderrLine: {'line': b'/usr/include/c++/11/ext/new_allocator.h: In instantiation of \xe2\x80\x98\x1b[01m\x1b[Kvoid __gnu_cxx::new_allocator<_Tp>::construct(_Up*, _Args&& ...) [with _Up = moveit_visual_tools::MoveItVisualTools; _Args = {const char (&)[10], const char (&)[19]}; _Tp = moveit_visual_tools::MoveItVisualTools]\x1b[m\x1b[K\xe2\x80\x99:\n'}
[7.863581] (rehab_arm_robot_control) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/c++/11/bits/alloc_traits.h:516:17:\x1b[m\x1b[K   required from \xe2\x80\x98\x1b[01m\x1b[Kstatic void std::allocator_traits<std::allocator<_Tp1> >::construct(std::allocator_traits<std::allocator<_Tp1> >::allocator_type&, _Up*, _Args&& ...) [with _Up = moveit_visual_tools::MoveItVisualTools; _Args = {const char (&)[10], const char (&)[19]}; _Tp = moveit_visual_tools::MoveItVisualTools; std::allocator_traits<std::allocator<_Tp1> >::allocator_type = std::allocator<moveit_visual_tools::MoveItVisualTools>]\x1b[m\x1b[K\xe2\x80\x99\n'}
[7.863655] (rehab_arm_robot_control) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/c++/11/bits/shared_ptr_base.h:519:39:\x1b[m\x1b[K   required from \xe2\x80\x98\x1b[01m\x1b[Kstd::_Sp_counted_ptr_inplace<_Tp, _Alloc, _Lp>::_Sp_counted_ptr_inplace(_Alloc, _Args&& ...) [with _Args = {const char (&)[10], const char (&)[19]}; _Tp = moveit_visual_tools::MoveItVisualTools; _Alloc = std::allocator<moveit_visual_tools::MoveItVisualTools>; __gnu_cxx::_Lock_policy _Lp = __gnu_cxx::_S_atomic]\x1b[m\x1b[K\xe2\x80\x99\n'}
[7.863737] (rehab_arm_robot_control) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/c++/11/bits/shared_ptr_base.h:650:16:\x1b[m\x1b[K   required from \xe2\x80\x98\x1b[01m\x1b[Kstd::__shared_count<_Lp>::__shared_count(_Tp*&, std::_Sp_alloc_shared_tag<_Alloc>, _Args&& ...) [with _Tp = moveit_visual_tools::MoveItVisualTools; _Alloc = std::allocator<moveit_visual_tools::MoveItVisualTools>; _Args = {const char (&)[10], const char (&)[19]}; __gnu_cxx::_Lock_policy _Lp = __gnu_cxx::_S_atomic]\x1b[m\x1b[K\xe2\x80\x99\n'}
[7.863811] (rehab_arm_robot_control) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/c++/11/bits/shared_ptr_base.h:1342:14:\x1b[m\x1b[K   required from \xe2\x80\x98\x1b[01m\x1b[Kstd::__shared_ptr<_Tp, _Lp>::__shared_ptr(std::_Sp_alloc_shared_tag<_Tp>, _Args&& ...) [with _Alloc = std::allocator<moveit_visual_tools::MoveItVisualTools>; _Args = {const char (&)[10], const char (&)[19]}; _Tp = moveit_visual_tools::MoveItVisualTools; __gnu_cxx::_Lock_policy _Lp = __gnu_cxx::_S_atomic]\x1b[m\x1b[K\xe2\x80\x99\n'}
[7.863878] (rehab_arm_robot_control) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/c++/11/bits/shared_ptr.h:409:59:\x1b[m\x1b[K   required from \xe2\x80\x98\x1b[01m\x1b[Kstd::shared_ptr<_Tp>::shared_ptr(std::_Sp_alloc_shared_tag<_Tp>, _Args&& ...) [with _Alloc = std::allocator<moveit_visual_tools::MoveItVisualTools>; _Args = {const char (&)[10], const char (&)[19]}; _Tp = moveit_visual_tools::MoveItVisualTools]\x1b[m\x1b[K\xe2\x80\x99\n'}
[7.863943] (rehab_arm_robot_control) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/c++/11/bits/shared_ptr.h:862:14:\x1b[m\x1b[K   required from \xe2\x80\x98\x1b[01m\x1b[Kstd::shared_ptr<_Tp> std::allocate_shared(const _Alloc&, _Args&& ...) [with _Tp = moveit_visual_tools::MoveItVisualTools; _Alloc = std::allocator<moveit_visual_tools::MoveItVisualTools>; _Args = {const char (&)[10], const char (&)[19]}]\x1b[m\x1b[K\xe2\x80\x99\n'}
[7.864014] (rehab_arm_robot_control) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/c++/11/bits/shared_ptr.h:878:39:\x1b[m\x1b[K   required from \xe2\x80\x98\x1b[01m\x1b[Kstd::shared_ptr<_Tp> std::make_shared(_Args&& ...) [with _Tp = moveit_visual_tools::MoveItVisualTools; _Args = {const char (&)[10], const char (&)[19]}]\x1b[m\x1b[K\xe2\x80\x99\n'}
[7.864078] (rehab_arm_robot_control) StderrLine: {'line': b'\x1b[01m\x1b[K/home/nocc/Desktop/3dof_rehab_arm/src/rehab_arm_robot_control/src/planning.cpp:151:81:\x1b[m\x1b[K   required from here\n'}
[7.864147] (rehab_arm_robot_control) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/c++/11/ext/new_allocator.h:162:11:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Kno matching function for call to \xe2\x80\x98\x1b[01m\x1b[Kmoveit_visual_tools::MoveItVisualTools::MoveItVisualTools(const char [10], const char [19])\x1b[m\x1b[K\xe2\x80\x99\n'}
[7.864202] (rehab_arm_robot_control) StderrLine: {'line': b'  162 |         { \x1b[01;31m\x1b[K::new((void *)__p) _Up(std::forward<_Args>(__args)...)\x1b[m\x1b[K; }\n'}
[7.864246] (rehab_arm_robot_control) StderrLine: {'line': b'      |           \x1b[01;31m\x1b[K^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\x1b[m\x1b[K\n'}
[7.864287] (rehab_arm_robot_control) StderrLine: {'line': b'In file included from \x1b[01m\x1b[K/home/nocc/Desktop/3dof_rehab_arm/src/rehab_arm_robot_control/src/planning.cpp:128\x1b[m\x1b[K:\n'}
[7.864331] (rehab_arm_robot_control) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/moveit_visual_tools/moveit_visual_tools.h:101:3:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[Kcandidate: \xe2\x80\x98\x1b[01m\x1b[Kmoveit_visual_tools::MoveItVisualTools::MoveItVisualTools(const SharedPtr&, const string&, const string&, moveit::core::RobotModelConstPtr)\x1b[m\x1b[K\xe2\x80\x99\n'}
[7.864390] (rehab_arm_robot_control) StderrLine: {'line': b'  101 |   \x1b[01;36m\x1b[KMoveItVisualTools\x1b[m\x1b[K(const rclcpp::Node::SharedPtr& node, const std::string& base_frame,\n'}
[7.864468] (rehab_arm_robot_control) StderrLine: {'line': b'      |   \x1b[01;36m\x1b[K^~~~~~~~~~~~~~~~~\x1b[m\x1b[K\n'}
[7.864531] (rehab_arm_robot_control) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/moveit_visual_tools/moveit_visual_tools.h:101:52:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[K  no known conversion for argument 1 from \xe2\x80\x98\x1b[01m\x1b[Kconst char [10]\x1b[m\x1b[K\xe2\x80\x99 to \xe2\x80\x98\x1b[01m\x1b[Kconst SharedPtr&\x1b[m\x1b[K\xe2\x80\x99 {aka \xe2\x80\x98\x1b[01m\x1b[Kconst std::shared_ptr<rclcpp::Node>&\x1b[m\x1b[K\xe2\x80\x99}\n'}
[7.864608] (rehab_arm_robot_control) StderrLine: {'line': b'  101 |   MoveItVisualTools(\x1b[01;36m\x1b[Kconst rclcpp::Node::SharedPtr& node\x1b[m\x1b[K, const std::string& base_frame,\n'}
[7.864661] (rehab_arm_robot_control) StderrLine: {'line': b'      |                     \x1b[01;36m\x1b[K~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~\x1b[m\x1b[K\n'}
[7.864710] (rehab_arm_robot_control) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/moveit_visual_tools/moveit_visual_tools.h:92:3:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[Kcandidate: \xe2\x80\x98\x1b[01m\x1b[Kmoveit_visual_tools::MoveItVisualTools::MoveItVisualTools(const SharedPtr&, const string&, const string&, planning_scene_monitor::PlanningSceneMonitorPtr)\x1b[m\x1b[K\xe2\x80\x99\n'}
[7.864766] (rehab_arm_robot_control) StderrLine: {'line': b'   92 |   \x1b[01;36m\x1b[KMoveItVisualTools\x1b[m\x1b[K(const rclcpp::Node::SharedPtr& node, const std::string& base_frame, const std::string& marker_topic,\n'}
[7.864815] (rehab_arm_robot_control) StderrLine: {'line': b'      |   \x1b[01;36m\x1b[K^~~~~~~~~~~~~~~~~\x1b[m\x1b[K\n'}
[7.864857] (rehab_arm_robot_control) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/moveit_visual_tools/moveit_visual_tools.h:92:3:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[K  candidate expects 4 arguments, 2 provided\n'}
[7.864898] (rehab_arm_robot_control) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/moveit_visual_tools/moveit_visual_tools.h:83:3:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[Kcandidate: \xe2\x80\x98\x1b[01m\x1b[Kmoveit_visual_tools::MoveItVisualTools::MoveItVisualTools(const SharedPtr&)\x1b[m\x1b[K\xe2\x80\x99\n'}
[7.864942] (rehab_arm_robot_control) StderrLine: {'line': b'   83 |   \x1b[01;36m\x1b[KMoveItVisualTools\x1b[m\x1b[K(const rclcpp::Node::SharedPtr& node);\n'}
[7.864984] (rehab_arm_robot_control) StderrLine: {'line': b'      |   \x1b[01;36m\x1b[K^~~~~~~~~~~~~~~~~\x1b[m\x1b[K\n'}
[7.865025] (rehab_arm_robot_control) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/moveit_visual_tools/moveit_visual_tools.h:83:3:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[K  candidate expects 1 argument, 2 provided\n'}
[7.865067] (rehab_arm_robot_control) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/moveit_visual_tools/moveit_visual_tools.h:74:7:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[Kcandidate: \xe2\x80\x98\x1b[01m\x1b[Kmoveit_visual_tools::MoveItVisualTools::MoveItVisualTools(const moveit_visual_tools::MoveItVisualTools&)\x1b[m\x1b[K\xe2\x80\x99\n'}
[7.865109] (rehab_arm_robot_control) StderrLine: {'line': b'   74 | class \x1b[01;36m\x1b[KMoveItVisualTools\x1b[m\x1b[K : public rviz_visual_tools::RvizVisualTools\n'}
[7.865151] (rehab_arm_robot_control) StderrLine: {'line': b'      |       \x1b[01;36m\x1b[K^~~~~~~~~~~~~~~~~\x1b[m\x1b[K\n'}
[7.865192] (rehab_arm_robot_control) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/moveit_visual_tools/moveit_visual_tools.h:74:7:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[K  candidate expects 1 argument, 2 provided\n'}
[7.865245] (rehab_arm_robot_control) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/moveit_visual_tools/moveit_visual_tools.h:74:7:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[Kcandidate: \xe2\x80\x98\x1b[01m\x1b[Kmoveit_visual_tools::MoveItVisualTools::MoveItVisualTools(moveit_visual_tools::MoveItVisualTools&&)\x1b[m\x1b[K\xe2\x80\x99\n'}
[7.865301] (rehab_arm_robot_control) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/moveit_visual_tools/moveit_visual_tools.h:74:7:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[K  candidate expects 1 argument, 2 provided\n'}
[7.920902] (-) TimerEvent: {}
[8.021559] (-) TimerEvent: {}
[8.121831] (-) TimerEvent: {}
[8.222109] (-) TimerEvent: {}
[8.322395] (-) TimerEvent: {}
[8.422652] (-) TimerEvent: {}
[8.523022] (-) TimerEvent: {}
[8.623512] (-) TimerEvent: {}
[8.723812] (-) TimerEvent: {}
[8.780194] (rehab_arm_robot_control) StderrLine: {'line': b'gmake[2]: *** [CMakeFiles/planning.dir/build.make:76: CMakeFiles/planning.dir/src/planning.cpp.o] Error 1\n'}
[8.780400] (rehab_arm_robot_control) StderrLine: {'line': b'gmake[1]: *** [CMakeFiles/Makefile2:169: CMakeFiles/planning.dir/all] Error 2\n'}
[8.780477] (rehab_arm_robot_control) StderrLine: {'line': b'gmake: *** [Makefile:146: all] Error 2\n'}
[8.781891] (rehab_arm_robot_control) CommandEnded: {'returncode': 2}
[8.789263] (rehab_arm_robot_control) JobEnded: {'identifier': 'rehab_arm_robot_control', 'rc': 2}
[8.799670] (-) EventReactorShutdown: {}
